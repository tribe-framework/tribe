apiVersion: v1
kind: Service
metadata:
  name: nginx-tribe
  namespace: tribe-junction
  labels:
    app: nginx-tribe
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
      nodePort: 31212
      name: http
  selector:
    app: nginx-tribe

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-tribe
  namespace: tribe-junction
  labels:
    app: nginx-tribe
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-tribe
  template:
    metadata:
      labels:
        app: nginx-tribe
    spec:
      initContainers:
      - name: setup
        image: yourusername/tribe-junction-setup:latest
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: shared-data
          mountPath: /shared
        command: ["/setup.sh"]
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
        - name: tribe-code
          mountPath: /var/www/html
        - name: shared-data
          mountPath: /var/www/html/phpmyadmin
          subPath: applications/phpmyadmin
        - name: uploads
          mountPath: /var/www/html/uploads
        - name: logs
          mountPath: /var/log/nginx
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-tribe-config
      - name: tribe-code
        hostPath:
          path: ./applications/tribe
          type: Directory
      - name: shared-data
        emptyDir: {}
      - name: uploads
        hostPath:
          path: ./uploads
          type: DirectoryOrCreate
      - name: logs
        hostPath:
          path: ./logs
          type: DirectoryOrCreate